---
test case: exact match
in:
  value: 0
  valuemaps:
  - type: 0
    value: 0
    newvalue: "Value 0"
  - type: 4
    value: "^1$"
    newvalue: "Regex 1"
  - type: 2
    value: "3"
    newvalue: "Value <= 3"
out:
  return: SUCCEED
  value: "Value 0 (0)"
---
test case: regexp
in:
  value: 1
  valuemaps:
  - type: 0
    value: 0
    newvalue: "Value 0"
  - type: 4
    value: "^1$"
    newvalue: "Regex 1"
  - type: 2
    value: "3"
    newvalue: "Value <= 3"
out:
  return: SUCCEED
  value: "Regex 1 (1)"
---
test case: range <= 3
in:
  value: 2
  valuemaps:
  - type: 0
    value: 0
    newvalue: "Value 0"
  - type: 4
    value: "^1$"
    newvalue: "Regex 1"
  - type: 2
    value: "3"
    newvalue: "Value <= 3"
out:
  return: SUCCEED
  value: "Value <= 3 (2)"
---
test case: range 5-7
in:
  value: 6
  valuemaps:
  - type: 0
    value: 0
    newvalue: "Value 0"
  - type: 4
    value: "^1$"
    newvalue: "Regex 1"
  - type: 2
    value: "3"
    newvalue: "Value <= 3"
  - type: 3
    value: "5-7"
    newvalue: "Value 5-7"
out:
  return: SUCCEED
  value: "Value 5-7 (6)"
---
test case: range > 10
in:
  value: 15
  valuemaps:
  - type: 0
    value: 0
    newvalue: "Value 0"
  - type: 4
    value: "^1$"
    newvalue: "Regex 1"
  - type: 2
    value: 3
    newvalue: "Value <= 3"
  - type: 3
    value: "5-7"
    newvalue: "Value 5-7"
  - type: 1
    value: 10
    newvalue: "Value >= 10"
out:
  return: SUCCEED
  value: "Value >= 10 (15)"
---
test case: default
in:
  value: 4
  valuemaps:
  - type: 0
    value: 0
    newvalue: "Value 0"
  - type: 4
    value: "^1$"
    newvalue: "Regex 1"
  - type: 2
    value: 3
    newvalue: "Value <= 3"
  - type: 3
    value: "5-7"
    newvalue: "Value 5-7"
  - type: 1
    value: 10
    newvalue: "Value >= 10"
  - type: 5
    value: ""
    newvalue: "Default"
out:
  return: SUCCEED
  value: "Default (4)"
---
test case: no mapping
in:
  value: 4
  valuemaps:
  - type: 0
    value: 0
    newvalue: "Value 0"
  - type: 4
    value: "^1$"
    newvalue: "Regex 1"
  - type: 2
    value: 3
    newvalue: "Value <= 3"
  - type: 3
    value: "5-7"
    newvalue: "Value 5-7"
  - type: 1
    value: 10
    newvalue: "Value >= 10"
out:
  return: FAIL
  value: 4
---
test case: order
in:
  value: 1
  valuemaps:
  - type: 2
    value: 3
    newvalue: "Value <= 3"
  - type: 0
    value: 1
    newvalue: "Value 1"
  - type: 4
    value: "^1$"
    newvalue: "Regex 1"
out:
  return: SUCCEED
  value: "Value <= 3 (1)"
---
test case: complex range
in:
  value: 4
  valuemaps:
  - type: 3
    value: "-10--5,-3-5,32,44,4- 6, 10.5 -12.5, 133.1, 8"
    newvalue: "Range"
out:
  return: SUCCEED
  value: "Range (4)"
---
test case: complex range2
in:
  value: 4
  valuemaps:
  - type: 3
    value: "-10--5,-3-1,32,44,9.0e-1- 6.0e0, 10.5 -12.5, 133.1, 8"
    newvalue: "Range"
out:
  return: SUCCEED
  value: "Range (4)"
---
test case: range with suffix
in:
  value: -400
  valuemaps:
  - type: 3
    value: "-10--5,-3-1,32,44,9.0e-1- 6.0e0, -5e-1K - -3e2"
    newvalue: "Range"
out:
  return: SUCCEED
  value: "Range (-400)"
...

